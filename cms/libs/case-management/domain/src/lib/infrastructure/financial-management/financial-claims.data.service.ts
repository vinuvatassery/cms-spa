/** Angular **/
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
/** External libraries **/
import { of } from 'rxjs/internal/observable/of';
import { ConfigurationProvider } from '@cms/shared/util-core'; 
import { ConsoleLogger } from '@microsoft/signalr/dist/esm/Utils';

@Injectable({ providedIn: 'root' })
export class FinancialClaimsDataService {
  /** Constructor**/
  constructor(
    private readonly http: HttpClient,
    private readonly configurationProvider: ConfigurationProvider
  ) {}
 

  CheckExceededMaxBenefit(serviceCost: number, clientId: number ) {
    debugger
    // console.log(`${this.configurationProvider.appSettings.caseApiUrl}` +
    // `/ClaimFlags/medicalclaim?servicesCost=${serviceCost}&clientId=${clientId}`)

    // return this.http.get<any>(
    //   `${this.configurationProvider.appSettings.caseApiUrl}` +
    //     `/ClaimFlags/medicalclaim?servicesCost=${serviceCost}&clientId=${clientId}`
    // );
    console.log(`${this.configurationProvider.appSettings.caseApiUrl}/financial-management/claims/dental/exceeded-limit?servicesCost=${serviceCost}&clientId=${clientId}`);
    return this.http.get(`${this.configurationProvider.appSettings.caseApiUrl}/financial-management/claims/dental/exceeded-limit?servicesCost=${serviceCost}&clientId=${clientId}`
    );
    
    
  }
  loadFinancialClaimsProcessListService( ) {
    return of([
      {
        invoiceID:1,
        providerName: 'Address `',
        taxID:'address2', 
        paymentMethod:'address2', 
        clientName:'address2', 
        nameOnPrimaryInsuranceCard:'address2', 
        memberID:'address2', 
        serviceCount:'address2', 
        totalCost:'address2', 
        totalDue:'address2', 
        paymentStatus:'address2', 
        by: 'by',
      },
      {
        invoiceID:2,
        providerName: 'Address `',
        taxID:'address2', 
        paymentMethod:'address2', 
        clientName:'address2', 
        nameOnPrimaryInsuranceCard:'address2', 
        memberID:'address2', 
        serviceCount:'address2', 
        totalCost:'address2', 
        totalDue:'address2', 
        paymentStatus:'address2', 
        by: 'by',
      },
    ]);
  }
  loadFinancialClaimsBatchListService( ) {
    return of([
      {
        id:1,
        batch: '05012021_001 `',
        ofProviders:'XX', 
        ofClaims:'XX', 
        pmtsRequested:'XX', 
        pmtsReconciled:'XX', 
        totalAmountDue:'XX,XXX.XX', 
        totalAmountReconciled:'XX,XXX.XX',  
      },
      {
        id:2,
        batch: '05012021_001 `',
        ofProviders:'XX', 
        ofClaims:'XX', 
        pmtsRequested:'XX', 
        pmtsReconciled:'XX', 
        totalAmountDue:'XX,XXX.XX', 
        totalAmountReconciled:'XX,XXX.XX',
      },
      {
        id:3,
        batch: '05012021_001 `',
        ofProviders:'XX', 
        ofClaims:'XX', 
        pmtsRequested:'XX', 
        pmtsReconciled:'XX', 
        totalAmountDue:'XX,XXX.XX', 
        totalAmountReconciled:'XX,XXX.XX',  
      },
    ]);
  }
  loadFinancialClaimsAllPaymentsListService( ) {
    return of([
      {
        batch: 'MMDDYYYY_XXX',
        vendor: 'Provider Name',
        type:'TPA', 
        clientName:'FName LName', 
        primaryInsurance:'FName LName', 
        memberID:'FName LName', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        originalWarranty:'XXXXXX', 
        originalAmount:'XXXXXX', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'XX-XX-XXXX',  
        by: 'by',
      },
      {
        batch: 'MMDDYYYY_XXX',
        vendor: 'Provider Name',
        type:'TPA', 
        clientName:'FName LName', 
        primaryInsurance:'FName LName', 
        memberID:'FName LName', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        originalWarranty:'XXXXXX', 
        originalAmount:'XXXXXX', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'XX-XX-XXXX',  
        by: 'by',
      },
      {
        batch: 'MMDDYYYY_XXX',
        vendor: 'Provider Name',
        type:'TPA', 
        clientName:'FName LName', 
        primaryInsurance:'FName LName', 
        memberID:'FName LName', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        originalWarranty:'XXXXXX', 
        originalAmount:'XXXXXX', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'XX-XX-XXXX',  
        by: 'by',
      },
      {
        batch: 'MMDDYYYY_XXX',
        vendor: 'Provider Name',
        type:'TPA', 
        clientName:'FName LName', 
        primaryInsurance:'FName LName', 
        memberID:'FName LName', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        originalWarranty:'XXXXXX', 
        originalAmount:'XXXXXX', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'XX-XX-XXXX',  
        by: 'by',
      },
    ]);
  }


  loadBatchLogListService( ) {
    return of([
      {
        vendorName: 'Address `',
        type:'address2', 
        clientName:'address2', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'address2',  
        by: 'by',
      },
      {
        vendorName: 'Address `',
        type:'address2', 
        clientName:'address2', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'address2',  
        by: 'by',
      },
     
    ]);
  }
  loadBatchItemsListService(){
    return of([
      {
        id:101,
        vendorName: 'vendorName',
        type:'address2', 
        clientName:'address2', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'address2',  
        by: 'by',
      },
      {
        id:102,
        vendorName: 'vendorName',
        type:'address2', 
        clientName:'address2', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'address2',  
        by: 'by',
      },
     
    ]);
  }

  loadReconcileListService(){
    return of([
      {
        id:1,
        vendorName: 'Vendor Name',
        type:'address2', 
        clientName:'address2', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'address2',  
        by: 'by',
      },
      {
        id:2,
        vendorName: 'Address `',
        type:'address2', 
        clientName:'address2', 
        refundWarrant:'address2', 
        refundAmount:'address2', 
        depositDate:'address2', 
        depositMethod:'address2', 
        indexCode:'address2', 
        pca:'address2', 
        grant:'address2', 
        vp:'address2', 
        refundNote:'address2', 
        entryDate:'address2',  
        by: 'by',
      },
     
    ]);
  }
  loadClaimsListService( ) {
    return of([
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      {
        insuranceCarrier: 'Carrier Name',
        planName:'Plan Name', 
        insuranceType:'Off-Exchange Plan', 
        amount:'XXX.XX', 
        coverageDates:'XX/XX/XXXX-XX/XX/XXXX', 
        policyID:'XXXXXXXXX', 
        groupID:'XXXXXXXXX', 
        paymentID:'XXXXXXXXX', 
        pmtMethod:'ACH', 
        pmtStatus:'Recon', 
        PCA:'XXXXXX', 
        mailCode:'XXXX',   
        by: 'by',
      },
      
      
    ]);
  }
}